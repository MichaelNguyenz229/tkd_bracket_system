' Modified bracket generator that returns sheet name
Function GenerateBracketForCurrentFilter() As String
    Dim wsSrc As Worksheet, wsBracket As Worksheet
    Dim templateSheet As Worksheet
    Dim fullTitle As String, cleanTitle As String
    Dim i As Long, c As Long, totalContestants As Long, bracketSize As Long
    Dim currentSchool As String
    Dim contestantList() As Variant
    Dim fillOrder() As Variant
    Dim regEx As Object

    Set wsSrc = ThisWorkbook.Sheets("Division_Report")

    ' Count contestants
    i = 5: c = 1
    Do While wsSrc.Cells(i, 1).Value <> "Grand Total"
        If wsSrc.Cells(i, 1).IndentLevel > 0 Then c = c + 1
        i = i + 1
    Loop
    totalContestants = c - 1
    If totalContestants < 1 Then Exit Function

    ' Determine bracket size
    bracketSize = 2
    Do While bracketSize < totalContestants
        bracketSize = bracketSize * 2
    Loop

    ' Get division title
    fullTitle = Trim(wsSrc.Range("B2").Text)
    If fullTitle = "" Then Exit Function

    ' Clean title for sheet name
    Set regEx = CreateObject("VBScript.RegExp")
    With regEx
        .Global = True
        .Pattern = "\s\d{1,2}-\d{1,2}"
        cleanTitle = .Replace(fullTitle, "")
        .Pattern = "\s\d+(\.\d+)?\s*-\s*\d+(\.\d+)?\s*\w{0,3}$"
        cleanTitle = .Replace(cleanTitle, "")
    End With
    cleanTitle = Application.WorksheetFunction.Substitute(cleanTitle, "\", "")
    cleanTitle = Application.WorksheetFunction.Substitute(cleanTitle, "/", "")
    cleanTitle = Application.WorksheetFunction.Substitute(cleanTitle, ":", "")
    cleanTitle = Application.WorksheetFunction.Substitute(cleanTitle, "*", "")
    cleanTitle = Application.WorksheetFunction.Substitute(cleanTitle, "?", "")
    cleanTitle = Application.WorksheetFunction.Substitute(cleanTitle, "[", "")
    cleanTitle = Application.WorksheetFunction.Substitute(cleanTitle, "]", "")
    If Len(cleanTitle) > 31 Then cleanTitle = Left(cleanTitle, 31)

    ' Exit if sheet already exists
    On Error Resume Next
    Set wsBracket = ThisWorkbook.Sheets(cleanTitle)
    On Error GoTo 0
    If Not wsBracket Is Nothing Then Exit Function

    ' Copy template
    Set templateSheet = ThisWorkbook.Sheets(bracketSize & "_template")
    If templateSheet Is Nothing Then Exit Function
    templateSheet.Copy After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
    Set wsBracket = ActiveSheet
    On Error Resume Next
    wsBracket.Name = cleanTitle
    On Error GoTo 0
    wsBracket.Range("Q11").Value = fullTitle

    ' Load contestants
    ReDim contestantList(1 To bracketSize, 1 To 2)
    i = 5: c = 1
    Do While wsSrc.Cells(i, 1).Value <> "Grand Total" And c <= bracketSize
        If wsSrc.Cells(i, 1).IndentLevel = 0 Then
            currentSchool = wsSrc.Cells(i, 1).Value
        Else
            contestantList(c, 1) = wsSrc.Cells(i, 1).Value
            contestantList(c, 2) = currentSchool
            c = c + 1
        End If
        i = i + 1
    Loop
    For i = totalContestants + 1 To bracketSize
        contestantList(i, 1) = "BYE"
        contestantList(i, 2) = ""
    Next i

    ' Fill order
    Select Case bracketSize
        Case 2: fillOrder = Array(Array("N17", "N18"), Array("T17", "T18"))
        Case 4: fillOrder = Array(Array("J10", "J11"), Array("X10", "X11"), Array("J26", "J27"), Array("X26", "X27"))
        Case 8: fillOrder = Array(Array("F6", "F7"), Array("F22", "F23"), Array("AB6", "AB7"), Array("AB22", "AB23"), Array("F14", "F15"), Array("F30", "F31"), Array("AB14", "AB15"), Array("AB30", "AB31"))
        Case 16: fillOrder = Array(Array("B4", "B5"), Array("B12", "B13"), Array("B20", "B21"), Array("B28", "B29"), Array("AF4", "AF5"), Array("AF12", "AF13"), Array("AF20", "AF21"), Array("AF28", "AF29"), Array("B8", "B9"), Array("B16", "B17"), Array("B24", "B25"), Array("B32", "B33"), Array("AF8", "AF9"), Array("AF16", "AF17"), Array("AF24", "AF25"), Array("AF32", "AF33"))
        Case Else: Exit Function
    End Select

    ' Fill bracket
    For i = 1 To bracketSize
        wsBracket.Range(fillOrder(i - 1)(0)).Value = contestantList(i, 1)
        wsBracket.Range(fillOrder(i - 1)(1)).Value = contestantList(i, 2)
    Next i

    GenerateBracketForCurrentFilter = wsBracket.Name
End Function
